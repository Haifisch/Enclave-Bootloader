   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"usb_int.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.CTR_LP,"ax",%progbits
  16              		.align	1
  17              		.global	CTR_LP
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	CTR_LP:
  24              	.LFB0:
  25              		.file 1 "usb_lib/usb_int.c"
   1:usb_lib/usb_int.c **** /******************** (C) COPYRIGHT 2008 STMicroelectronics ********************
   2:usb_lib/usb_int.c **** * File Name          : usb_int.c
   3:usb_lib/usb_int.c **** * Author             : MCD Application Team
   4:usb_lib/usb_int.c **** * Version            : V2.2.1
   5:usb_lib/usb_int.c **** * Date               : 09/22/2008
   6:usb_lib/usb_int.c **** * Description        : Endpoint CTR (Low and High) interrupt's service routines
   7:usb_lib/usb_int.c **** ********************************************************************************
   8:usb_lib/usb_int.c **** * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
   9:usb_lib/usb_int.c **** * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME.
  10:usb_lib/usb_int.c **** * AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT,
  11:usb_lib/usb_int.c **** * INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE
  12:usb_lib/usb_int.c **** * CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING
  13:usb_lib/usb_int.c **** * INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  14:usb_lib/usb_int.c **** *******************************************************************************/
  15:usb_lib/usb_int.c **** 
  16:usb_lib/usb_int.c **** /* Includes ------------------------------------------------------------------*/
  17:usb_lib/usb_int.c **** #include "usb_lib.h"
  18:usb_lib/usb_int.c **** 
  19:usb_lib/usb_int.c **** /* Private typedef -----------------------------------------------------------*/
  20:usb_lib/usb_int.c **** /* Private define ------------------------------------------------------------*/
  21:usb_lib/usb_int.c **** /* Private macro -------------------------------------------------------------*/
  22:usb_lib/usb_int.c **** /* Private variables ---------------------------------------------------------*/
  23:usb_lib/usb_int.c **** u16 SaveRState;
  24:usb_lib/usb_int.c **** u16 SaveTState;
  25:usb_lib/usb_int.c **** 
  26:usb_lib/usb_int.c **** /* Extern variables ----------------------------------------------------------*/
  27:usb_lib/usb_int.c **** extern void (*pEpInt_IN[7])(void);    /*  Handles IN  interrupts   */
  28:usb_lib/usb_int.c **** extern void (*pEpInt_OUT[7])(void);   /*  Handles OUT interrupts   */
  29:usb_lib/usb_int.c **** 
  30:usb_lib/usb_int.c **** /* Private function prototypes -----------------------------------------------*/
  31:usb_lib/usb_int.c **** /* Private functions ---------------------------------------------------------*/
  32:usb_lib/usb_int.c **** 
  33:usb_lib/usb_int.c **** /*******************************************************************************
  34:usb_lib/usb_int.c **** * Function Name  : CTR_LP.
  35:usb_lib/usb_int.c **** * Description    : Low priority Endpoint Correct Transfer interrupt's service
  36:usb_lib/usb_int.c **** *                  routine.
  37:usb_lib/usb_int.c **** * Input          : None.
  38:usb_lib/usb_int.c **** * Output         : None.
  39:usb_lib/usb_int.c **** * Return         : None.
  40:usb_lib/usb_int.c **** *******************************************************************************/
  41:usb_lib/usb_int.c **** void CTR_LP(void)
  42:usb_lib/usb_int.c **** {
  26              		.loc 1 42 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
  32              		.cfi_def_cfa_offset 32
  33              		.cfi_offset 3, -32
  34              		.cfi_offset 4, -28
  35              		.cfi_offset 5, -24
  36              		.cfi_offset 6, -20
  37              		.cfi_offset 7, -16
  38              		.cfi_offset 8, -12
  39              		.cfi_offset 9, -8
  40              		.cfi_offset 14, -4
  43:usb_lib/usb_int.c ****   u32 wEPVal = 0;
  44:usb_lib/usb_int.c ****   /* stay in loop while pending ints */
  45:usb_lib/usb_int.c ****   while (((wIstr = _GetISTR()) & ISTR_CTR) != 0)
  41              		.loc 1 45 0
  42 0004 DFF86081 		ldr	r8, .L101+28
  46:usb_lib/usb_int.c ****   {
  47:usb_lib/usb_int.c ****     _SetISTR((u16)CLR_CTR); /* clear CTR flag */
  48:usb_lib/usb_int.c ****     /* extract highest priority endpoint number */
  49:usb_lib/usb_int.c ****     EPindex = (u8)(wIstr & ISTR_EP_ID);
  43              		.loc 1 49 0
  44 0008 DFF86091 		ldr	r9, .L101+32
  45              	.LVL1:
  46              	.L2:
  45:usb_lib/usb_int.c ****   {
  47              		.loc 1 45 0
  48 000c D8F80030 		ldr	r3, [r8]
  49 0010 4E4A     		ldr	r2, .L101
  50 0012 99B2     		uxth	r1, r3
  51 0014 1B04     		lsls	r3, r3, #16
  52 0016 1180     		strh	r1, [r2]	@ movhi
  53 0018 51D5     		bpl	.L1
  47:usb_lib/usb_int.c ****     /* extract highest priority endpoint number */
  54              		.loc 1 47 0
  55 001a 47F6FF73 		movw	r3, #32767
  56 001e C8F80030 		str	r3, [r8]
  57              		.loc 1 49 0
  58 0022 1388     		ldrh	r3, [r2]
  59 0024 03F00F03 		and	r3, r3, #15
  60 0028 89F80030 		strb	r3, [r9]
  50:usb_lib/usb_int.c ****     if (EPindex == 0)
  61              		.loc 1 50 0
  62 002c 002B     		cmp	r3, #0
  63 002e 62D1     		bne	.L3
  51:usb_lib/usb_int.c ****     {
  52:usb_lib/usb_int.c ****       /* Decode and service control endpoint interrupt */
  53:usb_lib/usb_int.c ****       /* calling related service routine */
  54:usb_lib/usb_int.c ****       /* (Setup0_Process, In0_Process, Out0_Process) */
  55:usb_lib/usb_int.c **** 
  56:usb_lib/usb_int.c ****       /* save RX & TX status */
  57:usb_lib/usb_int.c ****       /* and set both to NAK */
  58:usb_lib/usb_int.c ****       SaveRState = _GetEPRxStatus(ENDP0);
  64              		.loc 1 58 0
  65 0030 474C     		ldr	r4, .L101+4
  66 0032 484E     		ldr	r6, .L101+8
  67 0034 2368     		ldr	r3, [r4]
  59:usb_lib/usb_int.c ****       SaveTState = _GetEPTxStatus(ENDP0);
  68              		.loc 1 59 0
  69 0036 484D     		ldr	r5, .L101+12
  58:usb_lib/usb_int.c ****       SaveTState = _GetEPTxStatus(ENDP0);
  70              		.loc 1 58 0
  71 0038 03F44053 		and	r3, r3, #12288
  72 003c 3380     		strh	r3, [r6]	@ movhi
  73              		.loc 1 59 0
  74 003e 2368     		ldr	r3, [r4]
  75              	.LBB2:
  60:usb_lib/usb_int.c ****       _SetEPRxStatus(ENDP0, EP_RX_NAK);
  76              		.loc 1 60 0
  77 0040 464F     		ldr	r7, .L101+16
  78              	.LBE2:
  59:usb_lib/usb_int.c ****       SaveTState = _GetEPTxStatus(ENDP0);
  79              		.loc 1 59 0
  80 0042 03F03003 		and	r3, r3, #48
  81 0046 2B80     		strh	r3, [r5]	@ movhi
  82              	.LBB3:
  83              		.loc 1 60 0
  84 0048 2368     		ldr	r3, [r4]
  85 004a 3B40     		ands	r3, r3, r7
  86 004c 9BB2     		uxth	r3, r3
  87              	.LVL2:
  88 004e 83F40053 		eor	r3, r3, #8192
  89              	.LVL3:
  90 0052 2360     		str	r3, [r4]
  91              	.LBE3:
  92              	.LBB4:
  61:usb_lib/usb_int.c ****       _SetEPTxStatus(ENDP0, EP_TX_NAK);
  93              		.loc 1 61 0
  94 0054 2368     		ldr	r3, [r4]
  95              	.LVL4:
  96 0056 23F4E043 		bic	r3, r3, #28672
  97 005a 23F04003 		bic	r3, r3, #64
  98 005e 9BB2     		uxth	r3, r3
  99              	.LVL5:
 100 0060 83F02003 		eor	r3, r3, #32
 101              	.LVL6:
 102 0064 2360     		str	r3, [r4]
 103              	.LVL7:
 104              	.LBE4:
  62:usb_lib/usb_int.c **** 
  63:usb_lib/usb_int.c **** 
  64:usb_lib/usb_int.c ****       /* DIR bit = origin of the interrupt */
  65:usb_lib/usb_int.c **** 
  66:usb_lib/usb_int.c ****       if ((wIstr & ISTR_DIR) == 0)
 105              		.loc 1 66 0
 106 0066 1388     		ldrh	r3, [r2]
 107              	.LVL8:
 108 0068 13F0100F 		tst	r3, #16
  67:usb_lib/usb_int.c ****       {
  68:usb_lib/usb_int.c ****         /* DIR = 0 */
  69:usb_lib/usb_int.c **** 
  70:usb_lib/usb_int.c ****         /* DIR = 0      => IN  int */
  71:usb_lib/usb_int.c ****         /* DIR = 0 implies that (EP_CTR_TX = 1) always  */
  72:usb_lib/usb_int.c **** 
  73:usb_lib/usb_int.c **** 
  74:usb_lib/usb_int.c ****         _ClearEP_CTR_TX(ENDP0);
 109              		.loc 1 74 0
 110 006c 2368     		ldr	r3, [r4]
  66:usb_lib/usb_int.c ****       {
 111              		.loc 1 66 0
 112 006e 28D1     		bne	.L4
 113              	.L100:
  75:usb_lib/usb_int.c ****         In0_Process();
  76:usb_lib/usb_int.c **** 
  77:usb_lib/usb_int.c ****            /* before terminate set Tx & Rx status */
  78:usb_lib/usb_int.c ****           _SetEPRxStatus(ENDP0, SaveRState);
  79:usb_lib/usb_int.c ****           _SetEPTxStatus(ENDP0, SaveTState);
  80:usb_lib/usb_int.c ****           return;
  81:usb_lib/usb_int.c ****       }
  82:usb_lib/usb_int.c ****       else
  83:usb_lib/usb_int.c ****       {
  84:usb_lib/usb_int.c ****         /* DIR = 1 */
  85:usb_lib/usb_int.c **** 
  86:usb_lib/usb_int.c ****         /* DIR = 1 & CTR_RX       => SETUP or OUT int */
  87:usb_lib/usb_int.c ****         /* DIR = 1 & (CTR_TX | CTR_RX) => 2 int pending */
  88:usb_lib/usb_int.c **** 
  89:usb_lib/usb_int.c ****         wEPVal = _GetENDPOINT(ENDP0);
  90:usb_lib/usb_int.c ****         if ((wEPVal & EP_CTR_TX) != 0)
  91:usb_lib/usb_int.c ****         {
  92:usb_lib/usb_int.c ****           _ClearEP_CTR_TX(ENDP0);
 114              		.loc 1 92 0
 115 0070 23F4E143 		bic	r3, r3, #28800
 116 0074 23F07003 		bic	r3, r3, #112
 117 0078 1B04     		lsls	r3, r3, #16
 118 007a 1B0C     		lsrs	r3, r3, #16
 119 007c 2360     		str	r3, [r4]
 120              	.LVL9:
  93:usb_lib/usb_int.c ****           In0_Process();
 121              		.loc 1 93 0
 122 007e FFF7FEFF 		bl	In0_Process
 123              	.LVL10:
 124              	.L97:
 125              	.LBB5:
  94:usb_lib/usb_int.c ****           /* before terminate set Tx & Rx status */
  95:usb_lib/usb_int.c ****           _SetEPRxStatus(ENDP0, SaveRState);
  96:usb_lib/usb_int.c ****           _SetEPTxStatus(ENDP0, SaveTState);
  97:usb_lib/usb_int.c ****           return;
  98:usb_lib/usb_int.c ****         }
  99:usb_lib/usb_int.c ****         else if ((wEPVal &EP_SETUP) != 0)
 100:usb_lib/usb_int.c ****         {
 101:usb_lib/usb_int.c ****           _ClearEP_CTR_RX(ENDP0); /* SETUP bit kept frozen while CTR_RX = 1 */
 102:usb_lib/usb_int.c ****           Setup0_Process();
 103:usb_lib/usb_int.c ****           /* before terminate set Tx & Rx status */
 104:usb_lib/usb_int.c ****           _SetEPRxStatus(ENDP0, SaveRState);
 105:usb_lib/usb_int.c ****           _SetEPTxStatus(ENDP0, SaveTState);
 106:usb_lib/usb_int.c ****           return;
 107:usb_lib/usb_int.c ****         }
 108:usb_lib/usb_int.c **** 
 109:usb_lib/usb_int.c ****         else if ((wEPVal & EP_CTR_RX) != 0)
 110:usb_lib/usb_int.c ****         {
 111:usb_lib/usb_int.c ****           _ClearEP_CTR_RX(ENDP0);
 112:usb_lib/usb_int.c ****           Out0_Process();
 113:usb_lib/usb_int.c ****           /* before terminate set Tx & Rx status */
 114:usb_lib/usb_int.c ****           _SetEPRxStatus(ENDP0, SaveRState);
 126              		.loc 1 114 0
 127 0082 2368     		ldr	r3, [r4]
 128 0084 3288     		ldrh	r2, [r6]
 129 0086 3B40     		ands	r3, r3, r7
 130 0088 9BB2     		uxth	r3, r3
 131              	.LVL11:
 132 008a D704     		lsls	r7, r2, #19
 133 008c 48BF     		it	mi
 134 008e 83F48053 		eormi	r3, r3, #4096
 135              	.LVL12:
 136 0092 9604     		lsls	r6, r2, #18
 137 0094 2E4A     		ldr	r2, .L101+4
 138 0096 48BF     		it	mi
 139 0098 83F40053 		eormi	r3, r3, #8192
 140              	.LVL13:
 141 009c 1360     		str	r3, [r2]
 142              	.LBE5:
 143              	.LBB6:
 115:usb_lib/usb_int.c ****           _SetEPTxStatus(ENDP0, SaveTState);
 144              		.loc 1 115 0
 145 009e 1368     		ldr	r3, [r2]
 146              	.LVL14:
 147 00a0 2988     		ldrh	r1, [r5]
 148 00a2 23F4E043 		bic	r3, r3, #28672
 149 00a6 23F04003 		bic	r3, r3, #64
 150 00aa 9BB2     		uxth	r3, r3
 151              	.LVL15:
 152 00ac CC06     		lsls	r4, r1, #27
 153 00ae 48BF     		it	mi
 154 00b0 83F01003 		eormi	r3, r3, #16
 155              	.LVL16:
 156 00b4 8806     		lsls	r0, r1, #26
 157 00b6 48BF     		it	mi
 158 00b8 83F02003 		eormi	r3, r3, #32
 159              	.LVL17:
 160 00bc 1360     		str	r3, [r2]
 161              	.LVL18:
 162              	.L1:
 163              	.LBE6:
 116:usb_lib/usb_int.c ****           return;
 117:usb_lib/usb_int.c ****         }
 118:usb_lib/usb_int.c ****       }
 119:usb_lib/usb_int.c ****     }/* if(EPindex == 0) */
 120:usb_lib/usb_int.c ****     else
 121:usb_lib/usb_int.c ****     {
 122:usb_lib/usb_int.c ****       /* Decode and service non control endpoints interrupt  */
 123:usb_lib/usb_int.c **** 
 124:usb_lib/usb_int.c ****       /* process related endpoint register */
 125:usb_lib/usb_int.c ****       wEPVal = _GetENDPOINT(EPindex);
 126:usb_lib/usb_int.c ****       if ((wEPVal & EP_CTR_RX) != 0)
 127:usb_lib/usb_int.c ****       {
 128:usb_lib/usb_int.c ****         /* clear int flag */
 129:usb_lib/usb_int.c ****         _ClearEP_CTR_RX(EPindex);
 130:usb_lib/usb_int.c **** 
 131:usb_lib/usb_int.c ****         /* call OUT service function */
 132:usb_lib/usb_int.c ****         (*pEpInt_OUT[EPindex-1])();
 133:usb_lib/usb_int.c **** 
 134:usb_lib/usb_int.c ****       } /* if((wEPVal & EP_CTR_RX) */
 135:usb_lib/usb_int.c **** 
 136:usb_lib/usb_int.c ****       if ((wEPVal & EP_CTR_TX) != 0)
 137:usb_lib/usb_int.c ****       {
 138:usb_lib/usb_int.c ****         /* clear int flag */
 139:usb_lib/usb_int.c ****         _ClearEP_CTR_TX(EPindex);
 140:usb_lib/usb_int.c **** 
 141:usb_lib/usb_int.c ****         /* call IN service function */
 142:usb_lib/usb_int.c ****         (*pEpInt_IN[EPindex-1])();
 143:usb_lib/usb_int.c ****       } /* if((wEPVal & EP_CTR_TX) != 0) */
 144:usb_lib/usb_int.c **** 
 145:usb_lib/usb_int.c ****     }/* if(EPindex == 0) else */
 146:usb_lib/usb_int.c **** 
 147:usb_lib/usb_int.c ****   }/* while(...) */
 148:usb_lib/usb_int.c **** }
 164              		.loc 1 148 0
 165 00be BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 166              	.LVL19:
 167              	.L4:
  90:usb_lib/usb_int.c ****         {
 168              		.loc 1 90 0
 169 00c2 1906     		lsls	r1, r3, #24
 170 00c4 01D5     		bpl	.L10
  92:usb_lib/usb_int.c ****           In0_Process();
 171              		.loc 1 92 0
 172 00c6 2368     		ldr	r3, [r4]
 173              	.LVL20:
 174 00c8 D2E7     		b	.L100
 175              	.LVL21:
 176              	.L10:
  99:usb_lib/usb_int.c ****         {
 177              		.loc 1 99 0
 178 00ca 1A05     		lsls	r2, r3, #20
 179 00cc 08D5     		bpl	.L15
 101:usb_lib/usb_int.c ****           Setup0_Process();
 180              		.loc 1 101 0
 181 00ce 2368     		ldr	r3, [r4]
 182              	.LVL22:
 183 00d0 23F07003 		bic	r3, r3, #112
 184 00d4 1B05     		lsls	r3, r3, #20
 185 00d6 1B0D     		lsrs	r3, r3, #20
 186 00d8 2360     		str	r3, [r4]
 187              	.LVL23:
 102:usb_lib/usb_int.c ****           /* before terminate set Tx & Rx status */
 188              		.loc 1 102 0
 189 00da FFF7FEFF 		bl	Setup0_Process
 190              	.LVL24:
 191 00de D0E7     		b	.L97
 192              	.LVL25:
 193              	.L15:
 109:usb_lib/usb_int.c ****         {
 194              		.loc 1 109 0
 195 00e0 1B04     		lsls	r3, r3, #16
 196              	.LVL26:
 197 00e2 93D5     		bpl	.L2
 111:usb_lib/usb_int.c ****           Out0_Process();
 198              		.loc 1 111 0
 199 00e4 2368     		ldr	r3, [r4]
 200 00e6 23F07003 		bic	r3, r3, #112
 201 00ea 1B05     		lsls	r3, r3, #20
 202 00ec 1B0D     		lsrs	r3, r3, #20
 203 00ee 2360     		str	r3, [r4]
 204              	.LVL27:
 112:usb_lib/usb_int.c ****           /* before terminate set Tx & Rx status */
 205              		.loc 1 112 0
 206 00f0 FFF7FEFF 		bl	Out0_Process
 207              	.LVL28:
 208 00f4 C5E7     		b	.L97
 209              	.L3:
 125:usb_lib/usb_int.c ****       if ((wEPVal & EP_CTR_RX) != 0)
 210              		.loc 1 125 0
 211 00f6 9A00     		lsls	r2, r3, #2
 212 00f8 02F18042 		add	r2, r2, #1073741824
 213 00fc 02F5B842 		add	r2, r2, #23552
 214 0100 1468     		ldr	r4, [r2]
 215              	.LVL29:
 126:usb_lib/usb_int.c ****       {
 216              		.loc 1 126 0
 217 0102 2104     		lsls	r1, r4, #16
 218 0104 0AD5     		bpl	.L26
 129:usb_lib/usb_int.c **** 
 219              		.loc 1 129 0
 220 0106 1168     		ldr	r1, [r2]
 132:usb_lib/usb_int.c **** 
 221              		.loc 1 132 0
 222 0108 013B     		subs	r3, r3, #1
 129:usb_lib/usb_int.c **** 
 223              		.loc 1 129 0
 224 010a 21F07001 		bic	r1, r1, #112
 225 010e 0905     		lsls	r1, r1, #20
 226 0110 090D     		lsrs	r1, r1, #20
 227 0112 1160     		str	r1, [r2]
 132:usb_lib/usb_int.c **** 
 228              		.loc 1 132 0
 229 0114 124A     		ldr	r2, .L101+20
 230 0116 52F82330 		ldr	r3, [r2, r3, lsl #2]
 231 011a 9847     		blx	r3
 232              	.LVL30:
 233              	.L26:
 136:usb_lib/usb_int.c ****       {
 234              		.loc 1 136 0
 235 011c 2206     		lsls	r2, r4, #24
 236 011e 7FF575AF 		bpl	.L2
 139:usb_lib/usb_int.c **** 
 237              		.loc 1 139 0
 238 0122 99F80020 		ldrb	r2, [r9]	@ zero_extendqisi2
 239 0126 9300     		lsls	r3, r2, #2
 240 0128 03F18043 		add	r3, r3, #1073741824
 241 012c 03F5B843 		add	r3, r3, #23552
 242 0130 1968     		ldr	r1, [r3]
 142:usb_lib/usb_int.c ****       } /* if((wEPVal & EP_CTR_TX) != 0) */
 243              		.loc 1 142 0
 244 0132 013A     		subs	r2, r2, #1
 139:usb_lib/usb_int.c **** 
 245              		.loc 1 139 0
 246 0134 21F4E141 		bic	r1, r1, #28800
 247 0138 21F07001 		bic	r1, r1, #112
 248 013c 0904     		lsls	r1, r1, #16
 249 013e 090C     		lsrs	r1, r1, #16
 250 0140 1960     		str	r1, [r3]
 142:usb_lib/usb_int.c ****       } /* if((wEPVal & EP_CTR_TX) != 0) */
 251              		.loc 1 142 0
 252 0142 084B     		ldr	r3, .L101+24
 253 0144 53F82230 		ldr	r3, [r3, r2, lsl #2]
 254 0148 9847     		blx	r3
 255              	.LVL31:
 256 014a 5FE7     		b	.L2
 257              	.L102:
 258              		.align	2
 259              	.L101:
 260 014c 00000000 		.word	wIstr
 261 0150 005C0040 		.word	1073765376
 262 0154 00000000 		.word	SaveRState
 263 0158 00000000 		.word	SaveTState
 264 015c 8FBFFFFF 		.word	-16497
 265 0160 00000000 		.word	pEpInt_OUT
 266 0164 00000000 		.word	pEpInt_IN
 267 0168 445C0040 		.word	1073765444
 268 016c 00000000 		.word	EPindex
 269              		.cfi_endproc
 270              	.LFE0:
 272              		.section	.text.CTR_HP,"ax",%progbits
 273              		.align	1
 274              		.global	CTR_HP
 275              		.syntax unified
 276              		.thumb
 277              		.thumb_func
 278              		.fpu softvfp
 280              	CTR_HP:
 281              	.LFB1:
 149:usb_lib/usb_int.c **** 
 150:usb_lib/usb_int.c **** /*******************************************************************************
 151:usb_lib/usb_int.c **** * Function Name  : CTR_HP.
 152:usb_lib/usb_int.c **** * Description    : High Priority Endpoint Correct Transfer interrupt's service
 153:usb_lib/usb_int.c **** *                  routine.
 154:usb_lib/usb_int.c **** * Input          : None.
 155:usb_lib/usb_int.c **** * Output         : None.
 156:usb_lib/usb_int.c **** * Return         : None.
 157:usb_lib/usb_int.c **** *******************************************************************************/
 158:usb_lib/usb_int.c **** void CTR_HP(void)
 159:usb_lib/usb_int.c **** {
 282              		.loc 1 159 0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 0
 285              		@ frame_needed = 0, uses_anonymous_args = 0
 286              	.LVL32:
 287 0000 70B5     		push	{r4, r5, r6, lr}
 288              		.cfi_def_cfa_offset 16
 289              		.cfi_offset 4, -16
 290              		.cfi_offset 5, -12
 291              		.cfi_offset 6, -8
 292              		.cfi_offset 14, -4
 160:usb_lib/usb_int.c ****   u32 wEPVal = 0;
 161:usb_lib/usb_int.c **** 
 162:usb_lib/usb_int.c ****   while (((wIstr = _GetISTR()) & ISTR_CTR) != 0)
 293              		.loc 1 162 0
 294 0002 184D     		ldr	r5, .L112
 295 0004 184C     		ldr	r4, .L112+4
 163:usb_lib/usb_int.c ****   {
 164:usb_lib/usb_int.c ****     _SetISTR((u16)CLR_CTR); /* clear CTR flag */
 165:usb_lib/usb_int.c ****     /* extract highest priority endpoint number */
 166:usb_lib/usb_int.c ****     EPindex = (u8)(wIstr & ISTR_EP_ID);
 296              		.loc 1 166 0
 297 0006 194E     		ldr	r6, .L112+8
 298              	.LVL33:
 299              	.L104:
 162:usb_lib/usb_int.c ****   {
 300              		.loc 1 162 0
 301 0008 2B68     		ldr	r3, [r5]
 302 000a 9AB2     		uxth	r2, r3
 303 000c 1B04     		lsls	r3, r3, #16
 304 000e 2280     		strh	r2, [r4]	@ movhi
 305 0010 00D4     		bmi	.L107
 167:usb_lib/usb_int.c ****     /* process related endpoint register */
 168:usb_lib/usb_int.c ****     wEPVal = _GetENDPOINT(EPindex);
 169:usb_lib/usb_int.c ****     if ((wEPVal & EP_CTR_RX) != 0)
 170:usb_lib/usb_int.c ****     {
 171:usb_lib/usb_int.c ****       /* clear int flag */
 172:usb_lib/usb_int.c ****       _ClearEP_CTR_RX(EPindex);
 173:usb_lib/usb_int.c **** 
 174:usb_lib/usb_int.c ****       /* call OUT service function */
 175:usb_lib/usb_int.c ****       (*pEpInt_OUT[EPindex-1])();
 176:usb_lib/usb_int.c **** 
 177:usb_lib/usb_int.c ****     } /* if((wEPVal & EP_CTR_RX) */
 178:usb_lib/usb_int.c ****     else if ((wEPVal & EP_CTR_TX) != 0)
 179:usb_lib/usb_int.c ****     {
 180:usb_lib/usb_int.c ****       /* clear int flag */
 181:usb_lib/usb_int.c ****       _ClearEP_CTR_TX(EPindex);
 182:usb_lib/usb_int.c **** 
 183:usb_lib/usb_int.c ****       /* call IN service function */
 184:usb_lib/usb_int.c ****       (*pEpInt_IN[EPindex-1])();
 185:usb_lib/usb_int.c **** 
 186:usb_lib/usb_int.c **** 
 187:usb_lib/usb_int.c ****     } /* if((wEPVal & EP_CTR_TX) != 0) */
 188:usb_lib/usb_int.c **** 
 189:usb_lib/usb_int.c ****   }/* while(...) */
 190:usb_lib/usb_int.c **** }
 306              		.loc 1 190 0
 307 0012 70BD     		pop	{r4, r5, r6, pc}
 308              	.L107:
 164:usb_lib/usb_int.c ****     /* extract highest priority endpoint number */
 309              		.loc 1 164 0
 310 0014 47F6FF73 		movw	r3, #32767
 311 0018 2B60     		str	r3, [r5]
 166:usb_lib/usb_int.c ****     /* process related endpoint register */
 312              		.loc 1 166 0
 313 001a 2388     		ldrh	r3, [r4]
 314 001c 03F00F03 		and	r3, r3, #15
 168:usb_lib/usb_int.c ****     if ((wEPVal & EP_CTR_RX) != 0)
 315              		.loc 1 168 0
 316 0020 9A00     		lsls	r2, r3, #2
 317 0022 02F18042 		add	r2, r2, #1073741824
 166:usb_lib/usb_int.c ****     /* process related endpoint register */
 318              		.loc 1 166 0
 319 0026 3370     		strb	r3, [r6]
 168:usb_lib/usb_int.c ****     if ((wEPVal & EP_CTR_RX) != 0)
 320              		.loc 1 168 0
 321 0028 02F5B842 		add	r2, r2, #23552
 322 002c 1168     		ldr	r1, [r2]
 323              	.LVL34:
 169:usb_lib/usb_int.c ****     {
 324              		.loc 1 169 0
 325 002e 0804     		lsls	r0, r1, #16
 326 0030 0BD5     		bpl	.L105
 172:usb_lib/usb_int.c **** 
 327              		.loc 1 172 0
 328 0032 1168     		ldr	r1, [r2]
 329              	.LVL35:
 175:usb_lib/usb_int.c **** 
 330              		.loc 1 175 0
 331 0034 013B     		subs	r3, r3, #1
 172:usb_lib/usb_int.c **** 
 332              		.loc 1 172 0
 333 0036 21F07001 		bic	r1, r1, #112
 334 003a 0905     		lsls	r1, r1, #20
 335 003c 090D     		lsrs	r1, r1, #20
 336 003e 1160     		str	r1, [r2]
 175:usb_lib/usb_int.c **** 
 337              		.loc 1 175 0
 338 0040 0B4A     		ldr	r2, .L112+12
 339              	.L111:
 184:usb_lib/usb_int.c **** 
 340              		.loc 1 184 0
 341 0042 52F82330 		ldr	r3, [r2, r3, lsl #2]
 342 0046 9847     		blx	r3
 343              	.LVL36:
 344 0048 DEE7     		b	.L104
 345              	.LVL37:
 346              	.L105:
 178:usb_lib/usb_int.c ****     {
 347              		.loc 1 178 0
 348 004a 0906     		lsls	r1, r1, #24
 349              	.LVL38:
 350 004c DCD5     		bpl	.L104
 181:usb_lib/usb_int.c **** 
 351              		.loc 1 181 0
 352 004e 1168     		ldr	r1, [r2]
 184:usb_lib/usb_int.c **** 
 353              		.loc 1 184 0
 354 0050 013B     		subs	r3, r3, #1
 181:usb_lib/usb_int.c **** 
 355              		.loc 1 181 0
 356 0052 21F4E141 		bic	r1, r1, #28800
 357 0056 21F07001 		bic	r1, r1, #112
 358 005a 0904     		lsls	r1, r1, #16
 359 005c 090C     		lsrs	r1, r1, #16
 360 005e 1160     		str	r1, [r2]
 184:usb_lib/usb_int.c **** 
 361              		.loc 1 184 0
 362 0060 044A     		ldr	r2, .L112+16
 363 0062 EEE7     		b	.L111
 364              	.L113:
 365              		.align	2
 366              	.L112:
 367 0064 445C0040 		.word	1073765444
 368 0068 00000000 		.word	wIstr
 369 006c 00000000 		.word	EPindex
 370 0070 00000000 		.word	pEpInt_OUT
 371 0074 00000000 		.word	pEpInt_IN
 372              		.cfi_endproc
 373              	.LFE1:
 375              		.comm	SaveTState,2,2
 376              		.comm	SaveRState,2,2
 377              		.text
 378              	.Letext0:
 379              		.file 2 "usb_lib/usb_type.h"
 380              		.file 3 "usb_lib/usb_core.h"
 381              		.file 4 "usb_lib/usb_regs.h"
 382              		.file 5 "usb_lib/usb_init.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 usb_int.c
/var/folders/gy/ljsb_4sn10j121t6zk2d77mw0000gn/T//ccRBkduw.s:16     .text.CTR_LP:0000000000000000 $t
/var/folders/gy/ljsb_4sn10j121t6zk2d77mw0000gn/T//ccRBkduw.s:23     .text.CTR_LP:0000000000000000 CTR_LP
/var/folders/gy/ljsb_4sn10j121t6zk2d77mw0000gn/T//ccRBkduw.s:260    .text.CTR_LP:000000000000014c $d
                            *COM*:0000000000000002 SaveRState
                            *COM*:0000000000000002 SaveTState
/var/folders/gy/ljsb_4sn10j121t6zk2d77mw0000gn/T//ccRBkduw.s:273    .text.CTR_HP:0000000000000000 $t
/var/folders/gy/ljsb_4sn10j121t6zk2d77mw0000gn/T//ccRBkduw.s:280    .text.CTR_HP:0000000000000000 CTR_HP
/var/folders/gy/ljsb_4sn10j121t6zk2d77mw0000gn/T//ccRBkduw.s:367    .text.CTR_HP:0000000000000064 $d

UNDEFINED SYMBOLS
In0_Process
Setup0_Process
Out0_Process
wIstr
pEpInt_OUT
pEpInt_IN
EPindex
